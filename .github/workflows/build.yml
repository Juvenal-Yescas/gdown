on:
  push:
    tags:
    - 'v*'

name: Build & Upload Release Asset

jobs:
  build:
    name: Build & Upload Release Asset
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Building
        run: |
          GOOS=darwin GOARCH=amd64 go build -v -o gdown ./cmd/gdown/
          zip --junk-paths gdown_${{ steps.get_version.outputs.VERSION }}_macos.zip gdown
          
          GOOS=windows GOARCH=386 go build -v -o gdown.exe ./cmd/gdown/
          zip --junk-paths gdown_${{ steps.get_version.outputs.VERSION }}_windows-x86.zip gdown.exe

          GOOS=windows GOARCH=amd64 go build -v -o gdown.exe ./cmd/gdown/
          zip --junk-paths gdown_${{ steps.get_version.outputs.VERSION }}_windows-x64.zip gdown.exe

          GOOS=linux GOARCH=amd64 go build -v -o gdown ./cmd/gdown/
          zip --junk-paths gdown_${{ steps.get_version.outputs.VERSION }}_linux-x64.zip gdown
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload macOS Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./gdown_${{ steps.get_version.outputs.VERSION }}_macos.zip
          asset_name: gdown_${{ steps.get_version.outputs.VERSION }}_macos.zip
          asset_content_type: application/x-msdownload

      - name: Upload Windows x86
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./gdown_${{ steps.get_version.outputs.VERSION }}_windows-x86.zip
          asset_name: gdown_${{ steps.get_version.outputs.VERSION }}_windows-x86.zip
          asset_content_type: application/x-msdownload

      - name: Upload Windows x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./gdown_${{ steps.get_version.outputs.VERSION }}_windows-x64.zip
          asset_name: gdown_${{ steps.get_version.outputs.VERSION }}_windows-x64.zip
          asset_content_type: application/x-msdownload

      - name: Upload linux x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./gdown_${{ steps.get_version.outputs.VERSION }}_linux-x64.zip
          asset_name: gdown_${{ steps.get_version.outputs.VERSION }}_linux-x64.zip
          asset_content_type: application/x-msdownload